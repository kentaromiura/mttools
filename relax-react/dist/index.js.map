{"version":3,"file":"index.js","names":["Context","React","createContext","store","undefined","displayName","Provider","useStore","useContext","Error"],"mappings":";;;;;;;;;AAAA;;;;;;AAKA,MAAM,4CAAOA,EAAG,0CAAKC,CAACC,aAAaA,CAMhC;AACF,OAAKC,CAAEC,UAASA;EAChB,CAAC,CAAC;;AAEH,4CAAOJ,CAACK,WAAWA,EAAG,aAAY,CAAC;;AAE5B,MAAM,EAAC,QAAQC,CAARA,uCAAQA,CAAC,EAAGN,4CAAOA,CAAC;;AAE3B,SAASO,uCAAQA,EAAS;AAChC,OAAM,EAAC,KAAKJ,CAAC,EAAG,0CAAKF,CAACO,UAAUA;AAACR,8CAAOA;GAAC,CAAC;AAC1C,MAAI,KAAKG,IAAKC,UAASA,CAAE;AACxB,QAAM,IAAIK,MAAKA,CAAC,oCAAoC,CAAC,CAAC;GACtD;AACD,QAAO,MAAKN,CAAqB;EACjC;AACD","sources":["uid://relax-react/src/index.ts"],"sourcesContent":["import * as React from \"react\";\n\ninterface IHazState<State> {\n\tstate: State;\n}\nconst Context = React.createContext<{\n\t// rome-ignore lint/ts/noExplicitAny: since\n\t// this creates a singleton `Context` on activaction we cannot pass\n\t// generic types to it as there is no call.\n\t// The `any` here will be erased later by useStore<T>\n\tstore: IHazState<any> | undefined;\n}>({\n\tstore: undefined,\n});\n\nContext.displayName = \"RelaxReact\";\n\nexport const {Provider} = Context;\n\nexport function useStore<Store>() {\n\tconst {store} = React.useContext(Context);\n\tif (store === undefined) {\n\t\tthrow new Error(\"The store hasn't been initialized.\");\n\t}\n\treturn store as IHazState<Store>;\n}\n"]}