{"version":3,"file":"index.js","names":["Store","constructor","reducer","initialState","isDispatching","state","listeners","dispatch","action","Error","forEach","listener","subscribe","push","splice","findIndex","l"],"mappings":";;;;;;;;;AAAA;;;;;AAGO,MAAMA,oDAAKA;AAMjB,aAAWC,CAACC,OAAOA,CAA2BC,aAAYA,CAAQ;QAH1DC,aAAaA,EAAG,MAAK;AAI5B,OAAI,CAACF,OAAOA,EAAGA,QAAOA,CAAC;AACvB,OAAI,CAACG,KAAKA,EAAGF,aAAYA,CAAC;AAC1B,OAAI,CAACG,SAASA,EAAG,GAAE,CAAC;GACpB;;AAED,UAAQC,CAACC,MAAMA,CAAU;AACxB,OAAI,IAAI,CAACJ,aAAaA,CAAE;AACvB,SAAM,IAAIK,MAAKA,CAAC,kCAAkC,CAAC,CAAC;IACpD;AACD,OAAI,CAACL,aAAaA,EAAG,KAAI,CAAC;AAC1B,OAAI,CAACC,KAAKA,EAAG,KAAI,CAACH,OAAOA,CAAC,IAAI,CAACG,KAAKA,CAAEG,OAAMA,CAAC,CAAC;AAC9C,OAAI,CAACJ,aAAaA,EAAG,MAAK,CAAC;AAC3B,OAAI,CAACE,SAASA,CAACI,OAAOA,CAAC,CAACC,QAAQA,CAAI,GAAC,SAAQA,EAAE,CAAC,CAAC;GACjD;;AAED,WAASC,CAACD,QAAQA,CAAqB;AACtC,OAAI,CAACL,SAASA,CAACO,IAAIA,CAACF,QAAQA,CAAC,CAAC;AAC9B,SAAO,GAAK,GAAC;AACZ,QAAI,CAACL,SAASA,CAACQ,MAAMA;AAAC,SAAI,CAACR,SAASA,CAACS,SAASA,CAAC,CAACC,CAACA,CAAI,GAAC,EAACA,IAAKL,SAAQA,CAAE,EAAC,CAAC;KAAC,CAAC;IAC1E,CAAC;GACF;EACD;AACD","sources":["uid://mttools/@kentaromiura/relax/src/relax.ts"],"sourcesContent":["export type Reducer<State, Actions> = (state: State, action: Actions) => State;\nexport type Callback = () => void;\n\nexport class Store<State, Actions> {\n\tstate: State;\n\tprivate reducer: Reducer<State, Actions>;\n\tprivate isDispatching = false;\n\tprivate listeners: Callback[];\n\n\tconstructor(reducer: Reducer<State, Actions>, initialState: State) {\n\t\tthis.reducer = reducer;\n\t\tthis.state = initialState;\n\t\tthis.listeners = [];\n\t}\n\n\tdispatch(action: Actions) {\n\t\tif (this.isDispatching) {\n\t\t\tthrow new Error(\"Reducers cannot dispatch actions\");\n\t\t}\n\t\tthis.isDispatching = true;\n\t\tthis.state = this.reducer(this.state, action);\n\t\tthis.isDispatching = false;\n\t\tthis.listeners.forEach((listener) => listener());\n\t}\n\n\tsubscribe(listener: Callback): Callback {\n\t\tthis.listeners.push(listener);\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.findIndex((l) => l === listener, 1));\n\t\t};\n\t}\n}\n"]}